
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    version: v1
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: {{ .Values.name }}
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubesphere.io/maxSurgePod: '2'
    kubesphere.io/minAvailablePod: '1'
    servicemesh.kubesphere.io/enabled: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
      version: v1
      app.kubernetes.io/version: v1
      app.kubernetes.io/name: {{ .Values.name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.name }}
        version: v1
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: {{ .Values.name }}
      annotations:
        kubesphere.io/containerSecrets: '{"{{ .Values.name }}-admin":"harbor","{{ .Values.name }}-front":"harbor"}'
        logging.kubesphere.io/logsidecar-config: '{}'
        sidecar.istio.io/inject: 'true'
    spec:
      volumes:
        - name: volume-4qoo1r
          persistentVolumeClaim:
            claimName: {{ .Values.admin.volumes }}
      containers:
        - name: '{{ .Values.name }}-admin'
          image: {{ .Values.admin.image.repository }}:{{ .Values.admin.image.version }}
          ports:
            - name: http-11
              protocol: TCP
              containerPort: 8080
              servicePort: 8080
			- name: http-12
              protocol: TCP
              containerPort: 8081
              servicePort: 8081
			- name: http-13
              protocol: TCP
              containerPort: 2181
              servicePort: 2181
			- name: http-14
              protocol: TCP
              containerPort: 2088
              servicePort: 2088
			- name: http-15
              protocol: TCP
              containerPort: 2089
              servicePort: 2089
			- name: http-16
              protocol: TCP
              containerPort: 2090
              servicePort: 2090
          volumeMounts:
            - name: volume-4qoo1r
              mountPath: /data/{{ .Values.name }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          pullSecret: harbor
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 10Mi
          command:
            - curl -fsSL run.sh | bash
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          pullSecret: harbor
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      imagePullSecrets:
        - name: harbor
      affinity: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: {{ .Values.name }}
  annotations:
    kubesphere.io/workloadType: Deployment
    servicemesh.kubesphere.io/enabled: 'true'
  name: {{ .Values.name }}
spec:
  sessionAffinity: None
  selector:
    app: {{ .Values.name }}
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: {{ .Values.name }}
  ports:
    - name: http-11
      protocol: TCP
      port: 8080
      targetPort: 8080
	- name: http-12
      protocol: TCP
      port: 8081
      targetPort: 8081
	- name: http-13
      protocol: TCP
      port: 2181
      targetPort: 2181
	- name: http-14
      protocol: TCP
      port: 2088
      targetPort: 2088
	- name: http-15
      protocol: TCP
      port: 2089
      targetPort: 2089
	- name: http-16
      protocol: TCP
      port: 2090
      targetPort: 2090
	  

